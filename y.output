Terminals unused in grammar

   SUB
   COMMENT
   END
   error_1
   error_2
   error_3
   UMINUS


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT SEMICOLON block END_PROGRAM

    2 block: block_helper BEGIN_PROGRAM statement_helper

    3 block_helper: %empty
    4             | declaration SEMICOLON block_helper

    5 declaration: declaration_helper COLON declaration_helper2

    6 declaration_helper: %empty
    7                   | IDENT
    8                   | IDENT COMMA declaration_helper

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
   10                    | INTEGER

   11 statement: expression_statement
   12          | ifelse_statement
   13          | while_statement
   14          | dobegin_statement
   15          | readwrite_statement
   16          | continue_statement

   17 expression_statement: var ASSIGN expression
   18                     | var EQUAL expression

   19 ifelse_statement: IF bool_exp THEN statement_helper ENDIF
   20                 | IF bool_exp THEN statement_helper ELSE statement_helper ENDIF

   21 while_statement: WHILE bool_exp BEGINLOOP statement_helper ENDLOOP

   22 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE bool_exp

   23 readwrite_statement: READ var readwrite_helper
   24                    | WRITE var readwrite_helper

   25 readwrite_helper: %empty
   26                 | COMMA var readwrite_helper

   27 continue_statement: CONTINUE

   28 statement_helper: %empty
   29                 | statement SEMICOLON statement_helper

   30 bool_exp: relation_and_exp bool_exp_helper

   31 relation_and_exp: relation_exp relation_and_helper

   32 relation_and_helper: %empty
   33                    | AND relation_exp relation_and_helper

   34 bool_exp_helper: %empty
   35                | OR relation_and_exp bool_exp_helper

   36 relation_exp: TRUE
   37             | FALSE
   38             | expression comp expression
   39             | NOT expression comp expression
   40             | NOT TRUE
   41             | NOT FALSE
   42             | L_PAREN bool_exp R_PAREN
   43             | NOT L_PAREN bool_exp R_PAREN

   44 comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE

   50 expression: mult_exp expression_helper

   51 expression_helper: %empty
   52                  | PLUS mult_exp expression_helper
   53                  | MINUS mult_exp expression_helper

   54 mult_exp: term mult_exp_helper

   55 mult_exp_helper: %empty
   56                | MULT term mult_exp_helper
   57                | DIV term mult_exp_helper
   58                | MOD term mult_exp_helper

   59 term: var
   60     | NUMBER
   61     | MINUS NUMBER
   62     | L_PAREN expression R_PAREN
   63     | MINUS L_PAREN expression R_PAREN

   64 var: IDENT
   65    | IDENT L_PAREN expression R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 9 60 61
IDENT (259) 1 7 8 64 65
L_PAREN (260) 9 42 43 62 63 65
R_PAREN (261) 9 42 43 62 63 65
MINUS (262) 53 61 63
MULT (263) 56
DIV (264) 57
MOD (265) 58
PLUS (266) 52
SUB (267)
LT (268) 46
LTE (269) 48
GT (270) 47
GTE (271) 49
EQUAL (272) 18
EQ (273) 44
INTEGER (274) 9 10
NEQ (275) 45
NOT (276) 39 40 41 43
AND (277) 33
OR (278) 35
ASSIGN (279) 17
COMMENT (280)
END (281)
SEMICOLON (282) 1 4 29
COLON (283) 5
COMMA (284) 8 26
ENDLOOP (285) 21 22
CONTINUE (286) 27
READ (287) 23
WRITE (288) 24
error_1 (289)
error_2 (290)
error_3 (291)
IF (292) 19 20
FALSE (293) 37 41
END_PROGRAM (294) 1
ENDIF (295) 19 20
ELSE (296) 20
DO (297) 22
BEGIN_PROGRAM (298) 2
ARRAY (299) 9
WHILE (300) 21 22
TRUE (301) 36 40
THEN (302) 19 20
PROGRAM (303) 1
OF (304) 9
BEGINLOOP (305) 21 22
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
block (54)
    on left: 2, on right: 1
block_helper (55)
    on left: 3 4, on right: 2 4
declaration (56)
    on left: 5, on right: 4
declaration_helper (57)
    on left: 6 7 8, on right: 5 8
declaration_helper2 (58)
    on left: 9 10, on right: 5
statement (59)
    on left: 11 12 13 14 15 16, on right: 29
expression_statement (60)
    on left: 17 18, on right: 11
ifelse_statement (61)
    on left: 19 20, on right: 12
while_statement (62)
    on left: 21, on right: 13
dobegin_statement (63)
    on left: 22, on right: 14
readwrite_statement (64)
    on left: 23 24, on right: 15
readwrite_helper (65)
    on left: 25 26, on right: 23 24 26
continue_statement (66)
    on left: 27, on right: 16
statement_helper (67)
    on left: 28 29, on right: 2 19 20 21 22 29
bool_exp (68)
    on left: 30, on right: 19 20 21 22 42 43
relation_and_exp (69)
    on left: 31, on right: 30 35
relation_and_helper (70)
    on left: 32 33, on right: 31 33
bool_exp_helper (71)
    on left: 34 35, on right: 30 35
relation_exp (72)
    on left: 36 37 38 39 40 41 42 43, on right: 31 33
comp (73)
    on left: 44 45 46 47 48 49, on right: 38 39
expression (74)
    on left: 50, on right: 17 18 38 39 62 63 65
expression_helper (75)
    on left: 51 52 53, on right: 50 52 53
mult_exp (76)
    on left: 54, on right: 50 52 53
mult_exp_helper (77)
    on left: 55 56 57 58, on right: 54 56 57 58
term (78)
    on left: 59 60 61 62 63, on right: 54 56 57 58
var (79)
    on left: 64 65, on right: 17 18 23 24 26 59


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT SEMICOLON block END_PROGRAM

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT . SEMICOLON block END_PROGRAM

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENT SEMICOLON . block END_PROGRAM

    IDENT  shift, and go to state 6

    COLON     reduce using rule 6 (declaration_helper)
    $default  reduce using rule 3 (block_helper)

    block               go to state 7
    block_helper        go to state 8
    declaration         go to state 9
    declaration_helper  go to state 10


State 6

    7 declaration_helper: IDENT .
    8                   | IDENT . COMMA declaration_helper

    COMMA  shift, and go to state 11

    $default  reduce using rule 7 (declaration_helper)


State 7

    1 program: PROGRAM IDENT SEMICOLON block . END_PROGRAM

    END_PROGRAM  shift, and go to state 12


State 8

    2 block: block_helper . BEGIN_PROGRAM statement_helper

    BEGIN_PROGRAM  shift, and go to state 13


State 9

    4 block_helper: declaration . SEMICOLON block_helper

    SEMICOLON  shift, and go to state 14


State 10

    5 declaration: declaration_helper . COLON declaration_helper2

    COLON  shift, and go to state 15


State 11

    8 declaration_helper: IDENT COMMA . declaration_helper

    IDENT  shift, and go to state 6

    $default  reduce using rule 6 (declaration_helper)

    declaration_helper  go to state 16


State 12

    1 program: PROGRAM IDENT SEMICOLON block END_PROGRAM .

    $default  reduce using rule 1 (program)


State 13

    2 block: block_helper BEGIN_PROGRAM . statement_helper

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 28 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 31
    var                   go to state 32


State 14

    4 block_helper: declaration SEMICOLON . block_helper

    IDENT  shift, and go to state 6

    COLON     reduce using rule 6 (declaration_helper)
    $default  reduce using rule 3 (block_helper)

    block_helper        go to state 33
    declaration         go to state 9
    declaration_helper  go to state 10


State 15

    5 declaration: declaration_helper COLON . declaration_helper2

    INTEGER  shift, and go to state 34
    ARRAY    shift, and go to state 35

    declaration_helper2  go to state 36


State 16

    8 declaration_helper: IDENT COMMA declaration_helper .

    $default  reduce using rule 8 (declaration_helper)


State 17

   64 var: IDENT .
   65    | IDENT . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 37

    $default  reduce using rule 64 (var)


State 18

   27 continue_statement: CONTINUE .

    $default  reduce using rule 27 (continue_statement)


State 19

   23 readwrite_statement: READ . var readwrite_helper

    IDENT  shift, and go to state 17

    var  go to state 38


State 20

   24 readwrite_statement: WRITE . var readwrite_helper

    IDENT  shift, and go to state 17

    var  go to state 39


State 21

   19 ifelse_statement: IF . bool_exp THEN statement_helper ENDIF
   20                 | IF . bool_exp THEN statement_helper ELSE statement_helper ENDIF

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 46
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 22

   22 dobegin_statement: DO . BEGINLOOP statement_helper ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 53


State 23

   21 while_statement: WHILE . bool_exp BEGINLOOP statement_helper ENDLOOP

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 54
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 24

   29 statement_helper: statement . SEMICOLON statement_helper

    SEMICOLON  shift, and go to state 55


State 25

   11 statement: expression_statement .

    $default  reduce using rule 11 (statement)


State 26

   12 statement: ifelse_statement .

    $default  reduce using rule 12 (statement)


State 27

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


State 28

   14 statement: dobegin_statement .

    $default  reduce using rule 14 (statement)


State 29

   15 statement: readwrite_statement .

    $default  reduce using rule 15 (statement)


State 30

   16 statement: continue_statement .

    $default  reduce using rule 16 (statement)


State 31

    2 block: block_helper BEGIN_PROGRAM statement_helper .

    $default  reduce using rule 2 (block)


State 32

   17 expression_statement: var . ASSIGN expression
   18                     | var . EQUAL expression

    EQUAL   shift, and go to state 56
    ASSIGN  shift, and go to state 57


State 33

    4 block_helper: declaration SEMICOLON block_helper .

    $default  reduce using rule 4 (block_helper)


State 34

   10 declaration_helper2: INTEGER .

    $default  reduce using rule 10 (declaration_helper2)


State 35

    9 declaration_helper2: ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 58


State 36

    5 declaration: declaration_helper COLON declaration_helper2 .

    $default  reduce using rule 5 (declaration)


State 37

   65 var: IDENT L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 60
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 38

   23 readwrite_statement: READ var . readwrite_helper

    COMMA  shift, and go to state 61

    $default  reduce using rule 25 (readwrite_helper)

    readwrite_helper  go to state 62


State 39

   24 readwrite_statement: WRITE var . readwrite_helper

    COMMA  shift, and go to state 61

    $default  reduce using rule 25 (readwrite_helper)

    readwrite_helper  go to state 63


State 40

   60 term: NUMBER .

    $default  reduce using rule 60 (term)


State 41

   42 relation_exp: L_PAREN . bool_exp R_PAREN
   62 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 64
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 65
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 42

   61 term: MINUS . NUMBER
   63     | MINUS . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 66
    L_PAREN  shift, and go to state 67


State 43

   39 relation_exp: NOT . expression comp expression
   40             | NOT . TRUE
   41             | NOT . FALSE
   43             | NOT . L_PAREN bool_exp R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 68
    MINUS    shift, and go to state 42
    FALSE    shift, and go to state 69
    TRUE     shift, and go to state 70

    expression  go to state 71
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 44

   37 relation_exp: FALSE .

    $default  reduce using rule 37 (relation_exp)


State 45

   36 relation_exp: TRUE .

    $default  reduce using rule 36 (relation_exp)


State 46

   19 ifelse_statement: IF bool_exp . THEN statement_helper ENDIF
   20                 | IF bool_exp . THEN statement_helper ELSE statement_helper ENDIF

    THEN  shift, and go to state 72


State 47

   30 bool_exp: relation_and_exp . bool_exp_helper

    OR  shift, and go to state 73

    $default  reduce using rule 34 (bool_exp_helper)

    bool_exp_helper  go to state 74


State 48

   31 relation_and_exp: relation_exp . relation_and_helper

    AND  shift, and go to state 75

    $default  reduce using rule 32 (relation_and_helper)

    relation_and_helper  go to state 76


State 49

   38 relation_exp: expression . comp expression

    LT   shift, and go to state 77
    LTE  shift, and go to state 78
    GT   shift, and go to state 79
    GTE  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82

    comp  go to state 83


State 50

   50 expression: mult_exp . expression_helper

    MINUS  shift, and go to state 84
    PLUS   shift, and go to state 85

    $default  reduce using rule 51 (expression_helper)

    expression_helper  go to state 86


State 51

   54 mult_exp: term . mult_exp_helper

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 55 (mult_exp_helper)

    mult_exp_helper  go to state 90


State 52

   59 term: var .

    $default  reduce using rule 59 (term)


State 53

   22 dobegin_statement: DO BEGINLOOP . statement_helper ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 28 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 91
    var                   go to state 32


State 54

   21 while_statement: WHILE bool_exp . BEGINLOOP statement_helper ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 55

   29 statement_helper: statement SEMICOLON . statement_helper

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 28 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 93
    var                   go to state 32


State 56

   18 expression_statement: var EQUAL . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 94
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 57

   17 expression_statement: var ASSIGN . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 95
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 58

    9 declaration_helper2: ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 96


State 59

   62 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 97
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 60

   65 var: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 98


State 61

   26 readwrite_helper: COMMA . var readwrite_helper

    IDENT  shift, and go to state 17

    var  go to state 99


State 62

   23 readwrite_statement: READ var readwrite_helper .

    $default  reduce using rule 23 (readwrite_statement)


State 63

   24 readwrite_statement: WRITE var readwrite_helper .

    $default  reduce using rule 24 (readwrite_statement)


State 64

   42 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 100


State 65

   38 relation_exp: expression . comp expression
   62 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 101
    LT       shift, and go to state 77
    LTE      shift, and go to state 78
    GT       shift, and go to state 79
    GTE      shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82

    comp  go to state 83


State 66

   61 term: MINUS NUMBER .

    $default  reduce using rule 61 (term)


State 67

   63 term: MINUS L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 102
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 68

   43 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   62 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 103
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 65
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 69

   41 relation_exp: NOT FALSE .

    $default  reduce using rule 41 (relation_exp)


State 70

   40 relation_exp: NOT TRUE .

    $default  reduce using rule 40 (relation_exp)


State 71

   39 relation_exp: NOT expression . comp expression

    LT   shift, and go to state 77
    LTE  shift, and go to state 78
    GT   shift, and go to state 79
    GTE  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82

    comp  go to state 104


State 72

   19 ifelse_statement: IF bool_exp THEN . statement_helper ENDIF
   20                 | IF bool_exp THEN . statement_helper ELSE statement_helper ENDIF

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 28 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 105
    var                   go to state 32


State 73

   35 bool_exp_helper: OR . relation_and_exp bool_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    relation_and_exp  go to state 106
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 74

   30 bool_exp: relation_and_exp bool_exp_helper .

    $default  reduce using rule 30 (bool_exp)


State 75

   33 relation_and_helper: AND . relation_exp relation_and_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    relation_exp  go to state 107
    expression    go to state 49
    mult_exp      go to state 50
    term          go to state 51
    var           go to state 52


State 76

   31 relation_and_exp: relation_exp relation_and_helper .

    $default  reduce using rule 31 (relation_and_exp)


State 77

   46 comp: LT .

    $default  reduce using rule 46 (comp)


State 78

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 79

   47 comp: GT .

    $default  reduce using rule 47 (comp)


State 80

   49 comp: GTE .

    $default  reduce using rule 49 (comp)


State 81

   44 comp: EQ .

    $default  reduce using rule 44 (comp)


State 82

   45 comp: NEQ .

    $default  reduce using rule 45 (comp)


State 83

   38 relation_exp: expression comp . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 108
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 84

   53 expression_helper: MINUS . mult_exp expression_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    mult_exp  go to state 109
    term      go to state 51
    var       go to state 52


State 85

   52 expression_helper: PLUS . mult_exp expression_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    mult_exp  go to state 110
    term      go to state 51
    var       go to state 52


State 86

   50 expression: mult_exp expression_helper .

    $default  reduce using rule 50 (expression)


State 87

   56 mult_exp_helper: MULT . term mult_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    term  go to state 111
    var   go to state 52


State 88

   57 mult_exp_helper: DIV . term mult_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    term  go to state 112
    var   go to state 52


State 89

   58 mult_exp_helper: MOD . term mult_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    term  go to state 113
    var   go to state 52


State 90

   54 mult_exp: term mult_exp_helper .

    $default  reduce using rule 54 (mult_exp)


State 91

   22 dobegin_statement: DO BEGINLOOP statement_helper . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 114


State 92

   21 while_statement: WHILE bool_exp BEGINLOOP . statement_helper ENDLOOP

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 28 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 115
    var                   go to state 32


State 93

   29 statement_helper: statement SEMICOLON statement_helper .

    $default  reduce using rule 29 (statement_helper)


State 94

   18 expression_statement: var EQUAL expression .

    $default  reduce using rule 18 (expression_statement)


State 95

   17 expression_statement: var ASSIGN expression .

    $default  reduce using rule 17 (expression_statement)


State 96

    9 declaration_helper2: ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 116


State 97

   62 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 101


State 98

   65 var: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 65 (var)


State 99

   26 readwrite_helper: COMMA var . readwrite_helper

    COMMA  shift, and go to state 61

    $default  reduce using rule 25 (readwrite_helper)

    readwrite_helper  go to state 117


State 100

   42 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 42 (relation_exp)


State 101

   62 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 102

   63 term: MINUS L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 118


State 103

   43 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 119


State 104

   39 relation_exp: NOT expression comp . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 59
    MINUS    shift, and go to state 42

    expression  go to state 120
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 105

   19 ifelse_statement: IF bool_exp THEN statement_helper . ENDIF
   20                 | IF bool_exp THEN statement_helper . ELSE statement_helper ENDIF

    ENDIF  shift, and go to state 121
    ELSE   shift, and go to state 122


State 106

   35 bool_exp_helper: OR relation_and_exp . bool_exp_helper

    OR  shift, and go to state 73

    $default  reduce using rule 34 (bool_exp_helper)

    bool_exp_helper  go to state 123


State 107

   33 relation_and_helper: AND relation_exp . relation_and_helper

    AND  shift, and go to state 75

    $default  reduce using rule 32 (relation_and_helper)

    relation_and_helper  go to state 124


State 108

   38 relation_exp: expression comp expression .

    $default  reduce using rule 38 (relation_exp)


State 109

   53 expression_helper: MINUS mult_exp . expression_helper

    MINUS  shift, and go to state 84
    PLUS   shift, and go to state 85

    $default  reduce using rule 51 (expression_helper)

    expression_helper  go to state 125


State 110

   52 expression_helper: PLUS mult_exp . expression_helper

    MINUS  shift, and go to state 84
    PLUS   shift, and go to state 85

    $default  reduce using rule 51 (expression_helper)

    expression_helper  go to state 126


State 111

   56 mult_exp_helper: MULT term . mult_exp_helper

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 55 (mult_exp_helper)

    mult_exp_helper  go to state 127


State 112

   57 mult_exp_helper: DIV term . mult_exp_helper

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 55 (mult_exp_helper)

    mult_exp_helper  go to state 128


State 113

   58 mult_exp_helper: MOD term . mult_exp_helper

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 55 (mult_exp_helper)

    mult_exp_helper  go to state 129


State 114

   22 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 130


State 115

   21 while_statement: WHILE bool_exp BEGINLOOP statement_helper . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 116

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 132


State 117

   26 readwrite_helper: COMMA var readwrite_helper .

    $default  reduce using rule 26 (readwrite_helper)


State 118

   63 term: MINUS L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 119

   43 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 43 (relation_exp)


State 120

   39 relation_exp: NOT expression comp expression .

    $default  reduce using rule 39 (relation_exp)


State 121

   19 ifelse_statement: IF bool_exp THEN statement_helper ENDIF .

    $default  reduce using rule 19 (ifelse_statement)


State 122

   20 ifelse_statement: IF bool_exp THEN statement_helper ELSE . statement_helper ENDIF

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 28 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 133
    var                   go to state 32


State 123

   35 bool_exp_helper: OR relation_and_exp bool_exp_helper .

    $default  reduce using rule 35 (bool_exp_helper)


State 124

   33 relation_and_helper: AND relation_exp relation_and_helper .

    $default  reduce using rule 33 (relation_and_helper)


State 125

   53 expression_helper: MINUS mult_exp expression_helper .

    $default  reduce using rule 53 (expression_helper)


State 126

   52 expression_helper: PLUS mult_exp expression_helper .

    $default  reduce using rule 52 (expression_helper)


State 127

   56 mult_exp_helper: MULT term mult_exp_helper .

    $default  reduce using rule 56 (mult_exp_helper)


State 128

   57 mult_exp_helper: DIV term mult_exp_helper .

    $default  reduce using rule 57 (mult_exp_helper)


State 129

   58 mult_exp_helper: MOD term mult_exp_helper .

    $default  reduce using rule 58 (mult_exp_helper)


State 130

   22 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE . bool_exp

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 134
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 131

   21 while_statement: WHILE bool_exp BEGINLOOP statement_helper ENDLOOP .

    $default  reduce using rule 21 (while_statement)


State 132

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 135


State 133

   20 ifelse_statement: IF bool_exp THEN statement_helper ELSE statement_helper . ENDIF

    ENDIF  shift, and go to state 136


State 134

   22 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE bool_exp .

    $default  reduce using rule 22 (dobegin_statement)


State 135

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 9 (declaration_helper2)


State 136

   20 ifelse_statement: IF bool_exp THEN statement_helper ELSE statement_helper ENDIF .

    $default  reduce using rule 20 (ifelse_statement)
