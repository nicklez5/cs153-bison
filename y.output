Terminals unused in grammar

   SUB
   COMMENT
   END
   error_1
   error_2
   error_3
   UMINUS


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT SEMICOLON block END_PROGRAM

    2 block: block_helper BEGIN_PROGRAM statement_helper

    3 block_helper: %empty
    4             | declaration SEMICOLON block_helper

    5 declaration: declaration_helper COLON declaration_helper2
    6            | declaration_helper declaration_helper2

    7 declaration_helper: %empty
    8                   | IDENT
    9                   | IDENT COMMA declaration_helper

   10 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
   11                    | INTEGER

   12 statement: expression_statement
   13          | ifelse_statement
   14          | while_statement
   15          | dobegin_statement
   16          | readwrite_statement
   17          | continue_statement

   18 expression_statement: var ASSIGN expression
   19                     | var EQUAL expression

   20 ifelse_statement: IF bool_exp THEN statement_helper ENDIF
   21                 | IF bool_exp THEN statement_helper ELSE statement_helper ENDIF

   22 while_statement: WHILE bool_exp BEGINLOOP statement_helper ENDLOOP

   23 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE bool_exp

   24 readwrite_statement: READ var readwrite_helper
   25                    | WRITE var readwrite_helper

   26 readwrite_helper: %empty
   27                 | COMMA var readwrite_helper

   28 continue_statement: CONTINUE

   29 statement_helper: %empty
   30                 | statement SEMICOLON statement_helper

   31 bool_exp: relation_and_exp bool_exp_helper

   32 relation_and_exp: relation_exp relation_and_helper

   33 relation_and_helper: %empty
   34                    | AND relation_exp relation_and_helper

   35 bool_exp_helper: %empty
   36                | OR relation_and_exp bool_exp_helper

   37 relation_exp: TRUE
   38             | FALSE
   39             | expression comp expression
   40             | NOT expression comp expression
   41             | NOT TRUE
   42             | NOT FALSE
   43             | L_PAREN bool_exp R_PAREN
   44             | NOT L_PAREN bool_exp R_PAREN

   45 comp: EQ
   46     | NEQ
   47     | LT
   48     | GT
   49     | LTE
   50     | GTE

   51 expression: mult_exp expression_helper

   52 expression_helper: %empty
   53                  | PLUS mult_exp expression_helper
   54                  | MINUS mult_exp expression_helper

   55 mult_exp: term mult_exp_helper

   56 mult_exp_helper: %empty
   57                | MULT term mult_exp_helper
   58                | DIV term mult_exp_helper
   59                | MOD term mult_exp_helper

   60 term: var
   61     | NUMBER
   62     | MINUS NUMBER
   63     | L_PAREN expression R_PAREN
   64     | MINUS L_PAREN expression R_PAREN

   65 var: IDENT
   66    | IDENT L_PAREN expression R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 10 61 62
IDENT (259) 1 8 9 65 66
L_PAREN (260) 10 43 44 63 64 66
R_PAREN (261) 10 43 44 63 64 66
MINUS (262) 54 62 64
MULT (263) 57
DIV (264) 58
MOD (265) 59
PLUS (266) 53
SUB (267)
LT (268) 47
LTE (269) 49
GT (270) 48
GTE (271) 50
EQUAL (272) 19
EQ (273) 45
INTEGER (274) 10 11
NEQ (275) 46
NOT (276) 40 41 42 44
AND (277) 34
OR (278) 36
ASSIGN (279) 18
COMMENT (280)
END (281)
SEMICOLON (282) 1 4 30
COLON (283) 5
COMMA (284) 9 27
ENDLOOP (285) 22 23
CONTINUE (286) 28
READ (287) 24
WRITE (288) 25
error_1 (289)
error_2 (290)
error_3 (291)
IF (292) 20 21
FALSE (293) 38 42
END_PROGRAM (294) 1
ENDIF (295) 20 21
ELSE (296) 21
DO (297) 23
BEGIN_PROGRAM (298) 2
ARRAY (299) 10
WHILE (300) 22 23
TRUE (301) 37 41
THEN (302) 20 21
PROGRAM (303) 1
OF (304) 10
BEGINLOOP (305) 22 23
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
block (54)
    on left: 2, on right: 1
block_helper (55)
    on left: 3 4, on right: 2 4
declaration (56)
    on left: 5 6, on right: 4
declaration_helper (57)
    on left: 7 8 9, on right: 5 6 9
declaration_helper2 (58)
    on left: 10 11, on right: 5 6
statement (59)
    on left: 12 13 14 15 16 17, on right: 30
expression_statement (60)
    on left: 18 19, on right: 12
ifelse_statement (61)
    on left: 20 21, on right: 13
while_statement (62)
    on left: 22, on right: 14
dobegin_statement (63)
    on left: 23, on right: 15
readwrite_statement (64)
    on left: 24 25, on right: 16
readwrite_helper (65)
    on left: 26 27, on right: 24 25 27
continue_statement (66)
    on left: 28, on right: 17
statement_helper (67)
    on left: 29 30, on right: 2 20 21 22 23 30
bool_exp (68)
    on left: 31, on right: 20 21 22 23 43 44
relation_and_exp (69)
    on left: 32, on right: 31 36
relation_and_helper (70)
    on left: 33 34, on right: 32 34
bool_exp_helper (71)
    on left: 35 36, on right: 31 36
relation_exp (72)
    on left: 37 38 39 40 41 42 43 44, on right: 32 34
comp (73)
    on left: 45 46 47 48 49 50, on right: 39 40
expression (74)
    on left: 51, on right: 18 19 39 40 63 64 66
expression_helper (75)
    on left: 52 53 54, on right: 51 53 54
mult_exp (76)
    on left: 55, on right: 51 53 54
mult_exp_helper (77)
    on left: 56 57 58 59, on right: 55 57 58 59
term (78)
    on left: 60 61 62 63 64, on right: 55 57 58 59
var (79)
    on left: 65 66, on right: 18 19 24 25 27 60


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT SEMICOLON block END_PROGRAM

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT . SEMICOLON block END_PROGRAM

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENT SEMICOLON . block END_PROGRAM

    IDENT  shift, and go to state 6

    BEGIN_PROGRAM  reduce using rule 3 (block_helper)
    $default       reduce using rule 7 (declaration_helper)

    block               go to state 7
    block_helper        go to state 8
    declaration         go to state 9
    declaration_helper  go to state 10


State 6

    8 declaration_helper: IDENT .
    9                   | IDENT . COMMA declaration_helper

    COMMA  shift, and go to state 11

    $default  reduce using rule 8 (declaration_helper)


State 7

    1 program: PROGRAM IDENT SEMICOLON block . END_PROGRAM

    END_PROGRAM  shift, and go to state 12


State 8

    2 block: block_helper . BEGIN_PROGRAM statement_helper

    BEGIN_PROGRAM  shift, and go to state 13


State 9

    4 block_helper: declaration . SEMICOLON block_helper

    SEMICOLON  shift, and go to state 14


State 10

    5 declaration: declaration_helper . COLON declaration_helper2
    6            | declaration_helper . declaration_helper2

    INTEGER  shift, and go to state 15
    COLON    shift, and go to state 16
    ARRAY    shift, and go to state 17

    declaration_helper2  go to state 18


State 11

    9 declaration_helper: IDENT COMMA . declaration_helper

    IDENT  shift, and go to state 6

    $default  reduce using rule 7 (declaration_helper)

    declaration_helper  go to state 19


State 12

    1 program: PROGRAM IDENT SEMICOLON block END_PROGRAM .

    $default  reduce using rule 1 (program)


State 13

    2 block: block_helper BEGIN_PROGRAM . statement_helper

    IDENT     shift, and go to state 20
    CONTINUE  shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    DO        shift, and go to state 25
    WHILE     shift, and go to state 26

    $default  reduce using rule 29 (statement_helper)

    statement             go to state 27
    expression_statement  go to state 28
    ifelse_statement      go to state 29
    while_statement       go to state 30
    dobegin_statement     go to state 31
    readwrite_statement   go to state 32
    continue_statement    go to state 33
    statement_helper      go to state 34
    var                   go to state 35


State 14

    4 block_helper: declaration SEMICOLON . block_helper

    IDENT  shift, and go to state 6

    BEGIN_PROGRAM  reduce using rule 3 (block_helper)
    $default       reduce using rule 7 (declaration_helper)

    block_helper        go to state 36
    declaration         go to state 9
    declaration_helper  go to state 10


State 15

   11 declaration_helper2: INTEGER .

    $default  reduce using rule 11 (declaration_helper2)


State 16

    5 declaration: declaration_helper COLON . declaration_helper2

    INTEGER  shift, and go to state 15
    ARRAY    shift, and go to state 17

    declaration_helper2  go to state 37


State 17

   10 declaration_helper2: ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 38


State 18

    6 declaration: declaration_helper declaration_helper2 .

    $default  reduce using rule 6 (declaration)


State 19

    9 declaration_helper: IDENT COMMA declaration_helper .

    $default  reduce using rule 9 (declaration_helper)


State 20

   65 var: IDENT .
   66    | IDENT . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 39

    $default  reduce using rule 65 (var)


State 21

   28 continue_statement: CONTINUE .

    $default  reduce using rule 28 (continue_statement)


State 22

   24 readwrite_statement: READ . var readwrite_helper

    IDENT  shift, and go to state 20

    var  go to state 40


State 23

   25 readwrite_statement: WRITE . var readwrite_helper

    IDENT  shift, and go to state 20

    var  go to state 41


State 24

   20 ifelse_statement: IF . bool_exp THEN statement_helper ENDIF
   21                 | IF . bool_exp THEN statement_helper ELSE statement_helper ENDIF

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    bool_exp          go to state 48
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    expression        go to state 51
    mult_exp          go to state 52
    term              go to state 53
    var               go to state 54


State 25

   23 dobegin_statement: DO . BEGINLOOP statement_helper ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 55


State 26

   22 while_statement: WHILE . bool_exp BEGINLOOP statement_helper ENDLOOP

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    bool_exp          go to state 56
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    expression        go to state 51
    mult_exp          go to state 52
    term              go to state 53
    var               go to state 54


State 27

   30 statement_helper: statement . SEMICOLON statement_helper

    SEMICOLON  shift, and go to state 57


State 28

   12 statement: expression_statement .

    $default  reduce using rule 12 (statement)


State 29

   13 statement: ifelse_statement .

    $default  reduce using rule 13 (statement)


State 30

   14 statement: while_statement .

    $default  reduce using rule 14 (statement)


State 31

   15 statement: dobegin_statement .

    $default  reduce using rule 15 (statement)


State 32

   16 statement: readwrite_statement .

    $default  reduce using rule 16 (statement)


State 33

   17 statement: continue_statement .

    $default  reduce using rule 17 (statement)


State 34

    2 block: block_helper BEGIN_PROGRAM statement_helper .

    $default  reduce using rule 2 (block)


State 35

   18 expression_statement: var . ASSIGN expression
   19                     | var . EQUAL expression

    EQUAL   shift, and go to state 58
    ASSIGN  shift, and go to state 59


State 36

    4 block_helper: declaration SEMICOLON block_helper .

    $default  reduce using rule 4 (block_helper)


State 37

    5 declaration: declaration_helper COLON declaration_helper2 .

    $default  reduce using rule 5 (declaration)


State 38

   10 declaration_helper2: ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 60


State 39

   66 var: IDENT L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 62
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 40

   24 readwrite_statement: READ var . readwrite_helper

    COMMA  shift, and go to state 63

    $default  reduce using rule 26 (readwrite_helper)

    readwrite_helper  go to state 64


State 41

   25 readwrite_statement: WRITE var . readwrite_helper

    COMMA  shift, and go to state 63

    $default  reduce using rule 26 (readwrite_helper)

    readwrite_helper  go to state 65


State 42

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 43

   43 relation_exp: L_PAREN . bool_exp R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    bool_exp          go to state 66
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    expression        go to state 67
    mult_exp          go to state 52
    term              go to state 53
    var               go to state 54


State 44

   62 term: MINUS . NUMBER
   64     | MINUS . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 68
    L_PAREN  shift, and go to state 69


State 45

   40 relation_exp: NOT . expression comp expression
   41             | NOT . TRUE
   42             | NOT . FALSE
   44             | NOT . L_PAREN bool_exp R_PAREN

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 70
    MINUS    shift, and go to state 44
    FALSE    shift, and go to state 71
    TRUE     shift, and go to state 72

    expression  go to state 73
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 46

   38 relation_exp: FALSE .

    $default  reduce using rule 38 (relation_exp)


State 47

   37 relation_exp: TRUE .

    $default  reduce using rule 37 (relation_exp)


State 48

   20 ifelse_statement: IF bool_exp . THEN statement_helper ENDIF
   21                 | IF bool_exp . THEN statement_helper ELSE statement_helper ENDIF

    THEN  shift, and go to state 74


State 49

   31 bool_exp: relation_and_exp . bool_exp_helper

    OR  shift, and go to state 75

    $default  reduce using rule 35 (bool_exp_helper)

    bool_exp_helper  go to state 76


State 50

   32 relation_and_exp: relation_exp . relation_and_helper

    AND  shift, and go to state 77

    $default  reduce using rule 33 (relation_and_helper)

    relation_and_helper  go to state 78


State 51

   39 relation_exp: expression . comp expression

    LT   shift, and go to state 79
    LTE  shift, and go to state 80
    GT   shift, and go to state 81
    GTE  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84

    comp  go to state 85


State 52

   51 expression: mult_exp . expression_helper

    MINUS  shift, and go to state 86
    PLUS   shift, and go to state 87

    $default  reduce using rule 52 (expression_helper)

    expression_helper  go to state 88


State 53

   55 mult_exp: term . mult_exp_helper

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 56 (mult_exp_helper)

    mult_exp_helper  go to state 92


State 54

   60 term: var .

    $default  reduce using rule 60 (term)


State 55

   23 dobegin_statement: DO BEGINLOOP . statement_helper ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 20
    CONTINUE  shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    DO        shift, and go to state 25
    WHILE     shift, and go to state 26

    $default  reduce using rule 29 (statement_helper)

    statement             go to state 27
    expression_statement  go to state 28
    ifelse_statement      go to state 29
    while_statement       go to state 30
    dobegin_statement     go to state 31
    readwrite_statement   go to state 32
    continue_statement    go to state 33
    statement_helper      go to state 93
    var                   go to state 35


State 56

   22 while_statement: WHILE bool_exp . BEGINLOOP statement_helper ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 57

   30 statement_helper: statement SEMICOLON . statement_helper

    IDENT     shift, and go to state 20
    CONTINUE  shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    DO        shift, and go to state 25
    WHILE     shift, and go to state 26

    $default  reduce using rule 29 (statement_helper)

    statement             go to state 27
    expression_statement  go to state 28
    ifelse_statement      go to state 29
    while_statement       go to state 30
    dobegin_statement     go to state 31
    readwrite_statement   go to state 32
    continue_statement    go to state 33
    statement_helper      go to state 95
    var                   go to state 35


State 58

   19 expression_statement: var EQUAL . expression

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 96
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 59

   18 expression_statement: var ASSIGN . expression

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 97
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 60

   10 declaration_helper2: ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 98


State 61

   63 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 99
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 62

   66 var: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100


State 63

   27 readwrite_helper: COMMA . var readwrite_helper

    IDENT  shift, and go to state 20

    var  go to state 101


State 64

   24 readwrite_statement: READ var readwrite_helper .

    $default  reduce using rule 24 (readwrite_statement)


State 65

   25 readwrite_statement: WRITE var readwrite_helper .

    $default  reduce using rule 25 (readwrite_statement)


State 66

   43 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 102


State 67

   39 relation_exp: expression . comp expression
   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103
    LT       shift, and go to state 79
    LTE      shift, and go to state 80
    GT       shift, and go to state 81
    GTE      shift, and go to state 82
    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84

    comp  go to state 85


State 68

   62 term: MINUS NUMBER .

    $default  reduce using rule 62 (term)


State 69

   64 term: MINUS L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 104
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 70

   44 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    bool_exp          go to state 105
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    expression        go to state 67
    mult_exp          go to state 52
    term              go to state 53
    var               go to state 54


State 71

   42 relation_exp: NOT FALSE .

    $default  reduce using rule 42 (relation_exp)


State 72

   41 relation_exp: NOT TRUE .

    $default  reduce using rule 41 (relation_exp)


State 73

   40 relation_exp: NOT expression . comp expression

    LT   shift, and go to state 79
    LTE  shift, and go to state 80
    GT   shift, and go to state 81
    GTE  shift, and go to state 82
    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84

    comp  go to state 106


State 74

   20 ifelse_statement: IF bool_exp THEN . statement_helper ENDIF
   21                 | IF bool_exp THEN . statement_helper ELSE statement_helper ENDIF

    IDENT     shift, and go to state 20
    CONTINUE  shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    DO        shift, and go to state 25
    WHILE     shift, and go to state 26

    $default  reduce using rule 29 (statement_helper)

    statement             go to state 27
    expression_statement  go to state 28
    ifelse_statement      go to state 29
    while_statement       go to state 30
    dobegin_statement     go to state 31
    readwrite_statement   go to state 32
    continue_statement    go to state 33
    statement_helper      go to state 107
    var                   go to state 35


State 75

   36 bool_exp_helper: OR . relation_and_exp bool_exp_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    relation_and_exp  go to state 108
    relation_exp      go to state 50
    expression        go to state 51
    mult_exp          go to state 52
    term              go to state 53
    var               go to state 54


State 76

   31 bool_exp: relation_and_exp bool_exp_helper .

    $default  reduce using rule 31 (bool_exp)


State 77

   34 relation_and_helper: AND . relation_exp relation_and_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    relation_exp  go to state 109
    expression    go to state 51
    mult_exp      go to state 52
    term          go to state 53
    var           go to state 54


State 78

   32 relation_and_exp: relation_exp relation_and_helper .

    $default  reduce using rule 32 (relation_and_exp)


State 79

   47 comp: LT .

    $default  reduce using rule 47 (comp)


State 80

   49 comp: LTE .

    $default  reduce using rule 49 (comp)


State 81

   48 comp: GT .

    $default  reduce using rule 48 (comp)


State 82

   50 comp: GTE .

    $default  reduce using rule 50 (comp)


State 83

   45 comp: EQ .

    $default  reduce using rule 45 (comp)


State 84

   46 comp: NEQ .

    $default  reduce using rule 46 (comp)


State 85

   39 relation_exp: expression comp . expression

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 110
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 86

   54 expression_helper: MINUS . mult_exp expression_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    mult_exp  go to state 111
    term      go to state 53
    var       go to state 54


State 87

   53 expression_helper: PLUS . mult_exp expression_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    mult_exp  go to state 112
    term      go to state 53
    var       go to state 54


State 88

   51 expression: mult_exp expression_helper .

    $default  reduce using rule 51 (expression)


State 89

   57 mult_exp_helper: MULT . term mult_exp_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    term  go to state 113
    var   go to state 54


State 90

   58 mult_exp_helper: DIV . term mult_exp_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    term  go to state 114
    var   go to state 54


State 91

   59 mult_exp_helper: MOD . term mult_exp_helper

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    term  go to state 115
    var   go to state 54


State 92

   55 mult_exp: term mult_exp_helper .

    $default  reduce using rule 55 (mult_exp)


State 93

   23 dobegin_statement: DO BEGINLOOP statement_helper . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 116


State 94

   22 while_statement: WHILE bool_exp BEGINLOOP . statement_helper ENDLOOP

    IDENT     shift, and go to state 20
    CONTINUE  shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    DO        shift, and go to state 25
    WHILE     shift, and go to state 26

    $default  reduce using rule 29 (statement_helper)

    statement             go to state 27
    expression_statement  go to state 28
    ifelse_statement      go to state 29
    while_statement       go to state 30
    dobegin_statement     go to state 31
    readwrite_statement   go to state 32
    continue_statement    go to state 33
    statement_helper      go to state 117
    var                   go to state 35


State 95

   30 statement_helper: statement SEMICOLON statement_helper .

    $default  reduce using rule 30 (statement_helper)


State 96

   19 expression_statement: var EQUAL expression .

    $default  reduce using rule 19 (expression_statement)


State 97

   18 expression_statement: var ASSIGN expression .

    $default  reduce using rule 18 (expression_statement)


State 98

   10 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 118


State 99

   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103


State 100

   66 var: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 66 (var)


State 101

   27 readwrite_helper: COMMA var . readwrite_helper

    COMMA  shift, and go to state 63

    $default  reduce using rule 26 (readwrite_helper)

    readwrite_helper  go to state 119


State 102

   43 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 43 (relation_exp)


State 103

   63 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 104

   64 term: MINUS L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 120


State 105

   44 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 121


State 106

   40 relation_exp: NOT expression comp . expression

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 44

    expression  go to state 122
    mult_exp    go to state 52
    term        go to state 53
    var         go to state 54


State 107

   20 ifelse_statement: IF bool_exp THEN statement_helper . ENDIF
   21                 | IF bool_exp THEN statement_helper . ELSE statement_helper ENDIF

    ENDIF  shift, and go to state 123
    ELSE   shift, and go to state 124


State 108

   36 bool_exp_helper: OR relation_and_exp . bool_exp_helper

    OR  shift, and go to state 75

    $default  reduce using rule 35 (bool_exp_helper)

    bool_exp_helper  go to state 125


State 109

   34 relation_and_helper: AND relation_exp . relation_and_helper

    AND  shift, and go to state 77

    $default  reduce using rule 33 (relation_and_helper)

    relation_and_helper  go to state 126


State 110

   39 relation_exp: expression comp expression .

    $default  reduce using rule 39 (relation_exp)


State 111

   54 expression_helper: MINUS mult_exp . expression_helper

    MINUS  shift, and go to state 86
    PLUS   shift, and go to state 87

    $default  reduce using rule 52 (expression_helper)

    expression_helper  go to state 127


State 112

   53 expression_helper: PLUS mult_exp . expression_helper

    MINUS  shift, and go to state 86
    PLUS   shift, and go to state 87

    $default  reduce using rule 52 (expression_helper)

    expression_helper  go to state 128


State 113

   57 mult_exp_helper: MULT term . mult_exp_helper

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 56 (mult_exp_helper)

    mult_exp_helper  go to state 129


State 114

   58 mult_exp_helper: DIV term . mult_exp_helper

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 56 (mult_exp_helper)

    mult_exp_helper  go to state 130


State 115

   59 mult_exp_helper: MOD term . mult_exp_helper

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 56 (mult_exp_helper)

    mult_exp_helper  go to state 131


State 116

   23 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 132


State 117

   22 while_statement: WHILE bool_exp BEGINLOOP statement_helper . ENDLOOP

    ENDLOOP  shift, and go to state 133


State 118

   10 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 134


State 119

   27 readwrite_helper: COMMA var readwrite_helper .

    $default  reduce using rule 27 (readwrite_helper)


State 120

   64 term: MINUS L_PAREN expression R_PAREN .

    $default  reduce using rule 64 (term)


State 121

   44 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 44 (relation_exp)


State 122

   40 relation_exp: NOT expression comp expression .

    $default  reduce using rule 40 (relation_exp)


State 123

   20 ifelse_statement: IF bool_exp THEN statement_helper ENDIF .

    $default  reduce using rule 20 (ifelse_statement)


State 124

   21 ifelse_statement: IF bool_exp THEN statement_helper ELSE . statement_helper ENDIF

    IDENT     shift, and go to state 20
    CONTINUE  shift, and go to state 21
    READ      shift, and go to state 22
    WRITE     shift, and go to state 23
    IF        shift, and go to state 24
    DO        shift, and go to state 25
    WHILE     shift, and go to state 26

    $default  reduce using rule 29 (statement_helper)

    statement             go to state 27
    expression_statement  go to state 28
    ifelse_statement      go to state 29
    while_statement       go to state 30
    dobegin_statement     go to state 31
    readwrite_statement   go to state 32
    continue_statement    go to state 33
    statement_helper      go to state 135
    var                   go to state 35


State 125

   36 bool_exp_helper: OR relation_and_exp bool_exp_helper .

    $default  reduce using rule 36 (bool_exp_helper)


State 126

   34 relation_and_helper: AND relation_exp relation_and_helper .

    $default  reduce using rule 34 (relation_and_helper)


State 127

   54 expression_helper: MINUS mult_exp expression_helper .

    $default  reduce using rule 54 (expression_helper)


State 128

   53 expression_helper: PLUS mult_exp expression_helper .

    $default  reduce using rule 53 (expression_helper)


State 129

   57 mult_exp_helper: MULT term mult_exp_helper .

    $default  reduce using rule 57 (mult_exp_helper)


State 130

   58 mult_exp_helper: DIV term mult_exp_helper .

    $default  reduce using rule 58 (mult_exp_helper)


State 131

   59 mult_exp_helper: MOD term mult_exp_helper .

    $default  reduce using rule 59 (mult_exp_helper)


State 132

   23 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE . bool_exp

    NUMBER   shift, and go to state 42
    IDENT    shift, and go to state 20
    L_PAREN  shift, and go to state 43
    MINUS    shift, and go to state 44
    NOT      shift, and go to state 45
    FALSE    shift, and go to state 46
    TRUE     shift, and go to state 47

    bool_exp          go to state 136
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    expression        go to state 51
    mult_exp          go to state 52
    term              go to state 53
    var               go to state 54


State 133

   22 while_statement: WHILE bool_exp BEGINLOOP statement_helper ENDLOOP .

    $default  reduce using rule 22 (while_statement)


State 134

   10 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 10 (declaration_helper2)


State 135

   21 ifelse_statement: IF bool_exp THEN statement_helper ELSE statement_helper . ENDIF

    ENDIF  shift, and go to state 137


State 136

   23 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE bool_exp .

    $default  reduce using rule 23 (dobegin_statement)


State 137

   21 ifelse_statement: IF bool_exp THEN statement_helper ELSE statement_helper ENDIF .

    $default  reduce using rule 21 (ifelse_statement)
