Terminals unused in grammar

   SUB
   EQUAL
   COMMENT
   END
   error_1
   error_2
   error_3
   UMINUS


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT SEMICOLON block END_PROGRAM

    2 block: block_helper BEGIN_PROGRAM statement_helper

    3 block_helper: %empty
    4             | declaration SEMICOLON block_helper

    5 declaration: declaration_helper COLON declaration_helper2

    6 declaration_helper: %empty
    7                   | IDENT
    8                   | IDENT COMMA declaration_helper

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
   10                    | INTEGER

   11 statement: expression_statement
   12          | ifelse_statement
   13          | while_statement
   14          | dobegin_statement
   15          | readwrite_statement
   16          | continue_statement

   17 expression_statement: var ASSIGN expression

   18 ifelse_statement: IF bool_exp THEN statement_helper ENDIF
   19                 | IF bool_exp THEN statement_helper ELSE statement_helper ENDIF

   20 while_statement: WHILE bool_exp BEGINLOOP statement_helper ENDLOOP

   21 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE bool_exp

   22 readwrite_statement: READ var readwrite_helper
   23                    | WRITE var readwrite_helper

   24 readwrite_helper: %empty
   25                 | COMMA var readwrite_helper

   26 continue_statement: CONTINUE

   27 statement_helper: %empty
   28                 | statement SEMICOLON statement_helper

   29 bool_exp: relation_and_exp bool_exp_helper

   30 relation_and_exp: relation_exp relation_and_helper

   31 relation_and_helper: %empty
   32                    | AND relation_exp relation_and_helper

   33 bool_exp_helper: %empty
   34                | OR relation_and_exp bool_exp_helper

   35 relation_exp: TRUE
   36             | FALSE
   37             | expression comp expression
   38             | NOT expression comp expression
   39             | NOT TRUE
   40             | NOT FALSE
   41             | L_PAREN bool_exp R_PAREN
   42             | NOT L_PAREN bool_exp R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: mult_exp expression_helper

   50 expression_helper: %empty
   51                  | PLUS mult_exp expression_helper
   52                  | MINUS mult_exp expression_helper

   53 mult_exp: term mult_exp_helper

   54 mult_exp_helper: %empty
   55                | MULT term mult_exp_helper
   56                | DIV term mult_exp_helper
   57                | MOD term mult_exp_helper

   58 term: var
   59     | NUMBER
   60     | MINUS NUMBER
   61     | L_PAREN expression R_PAREN
   62     | MINUS L_PAREN expression R_PAREN

   63 var: IDENT
   64    | IDENT L_PAREN expression R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 9 59 60
IDENT (259) 1 7 8 63 64
L_PAREN (260) 9 41 42 61 62 64
R_PAREN (261) 9 41 42 61 62 64
MINUS (262) 52 60 62
MULT (263) 55
DIV (264) 56
MOD (265) 57
PLUS (266) 51
SUB (267)
LT (268) 45
LTE (269) 47
GT (270) 46
GTE (271) 48
EQUAL (272)
EQ (273) 43
INTEGER (274) 9 10
NEQ (275) 44
NOT (276) 38 39 40 42
AND (277) 32
OR (278) 34
ASSIGN (279) 17
COMMENT (280)
END (281)
SEMICOLON (282) 1 4 28
COLON (283) 5
COMMA (284) 8 25
ENDLOOP (285) 20 21
CONTINUE (286) 26
READ (287) 22
WRITE (288) 23
error_1 (289)
error_2 (290)
error_3 (291)
IF (292) 18 19
FALSE (293) 36 40
END_PROGRAM (294) 1
ENDIF (295) 18 19
ELSE (296) 19
DO (297) 21
BEGIN_PROGRAM (298) 2
ARRAY (299) 9
WHILE (300) 20 21
TRUE (301) 35 39
THEN (302) 18 19
PROGRAM (303) 1
OF (304) 9
BEGINLOOP (305) 20 21
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
block (54)
    on left: 2, on right: 1
block_helper (55)
    on left: 3 4, on right: 2 4
declaration (56)
    on left: 5, on right: 4
declaration_helper (57)
    on left: 6 7 8, on right: 5 8
declaration_helper2 (58)
    on left: 9 10, on right: 5
statement (59)
    on left: 11 12 13 14 15 16, on right: 28
expression_statement (60)
    on left: 17, on right: 11
ifelse_statement (61)
    on left: 18 19, on right: 12
while_statement (62)
    on left: 20, on right: 13
dobegin_statement (63)
    on left: 21, on right: 14
readwrite_statement (64)
    on left: 22 23, on right: 15
readwrite_helper (65)
    on left: 24 25, on right: 22 23 25
continue_statement (66)
    on left: 26, on right: 16
statement_helper (67)
    on left: 27 28, on right: 2 18 19 20 21 28
bool_exp (68)
    on left: 29, on right: 18 19 20 21 41 42
relation_and_exp (69)
    on left: 30, on right: 29 34
relation_and_helper (70)
    on left: 31 32, on right: 30 32
bool_exp_helper (71)
    on left: 33 34, on right: 29 34
relation_exp (72)
    on left: 35 36 37 38 39 40 41 42, on right: 30 32
comp (73)
    on left: 43 44 45 46 47 48, on right: 37 38
expression (74)
    on left: 49, on right: 17 37 38 61 62 64
expression_helper (75)
    on left: 50 51 52, on right: 49 51 52
mult_exp (76)
    on left: 53, on right: 49 51 52
mult_exp_helper (77)
    on left: 54 55 56 57, on right: 53 55 56 57
term (78)
    on left: 58 59 60 61 62, on right: 53 55 56 57
var (79)
    on left: 63 64, on right: 17 22 23 25 58


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . IDENT SEMICOLON block END_PROGRAM

    IDENT  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT . SEMICOLON block END_PROGRAM

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM IDENT SEMICOLON . block END_PROGRAM

    IDENT  shift, and go to state 6

    COLON     reduce using rule 6 (declaration_helper)
    $default  reduce using rule 3 (block_helper)

    block               go to state 7
    block_helper        go to state 8
    declaration         go to state 9
    declaration_helper  go to state 10


State 6

    7 declaration_helper: IDENT .
    8                   | IDENT . COMMA declaration_helper

    COMMA  shift, and go to state 11

    $default  reduce using rule 7 (declaration_helper)


State 7

    1 program: PROGRAM IDENT SEMICOLON block . END_PROGRAM

    END_PROGRAM  shift, and go to state 12


State 8

    2 block: block_helper . BEGIN_PROGRAM statement_helper

    BEGIN_PROGRAM  shift, and go to state 13


State 9

    4 block_helper: declaration . SEMICOLON block_helper

    SEMICOLON  shift, and go to state 14


State 10

    5 declaration: declaration_helper . COLON declaration_helper2

    COLON  shift, and go to state 15


State 11

    8 declaration_helper: IDENT COMMA . declaration_helper

    IDENT  shift, and go to state 6

    $default  reduce using rule 6 (declaration_helper)

    declaration_helper  go to state 16


State 12

    1 program: PROGRAM IDENT SEMICOLON block END_PROGRAM .

    $default  reduce using rule 1 (program)


State 13

    2 block: block_helper BEGIN_PROGRAM . statement_helper

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 27 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 31
    var                   go to state 32


State 14

    4 block_helper: declaration SEMICOLON . block_helper

    IDENT  shift, and go to state 6

    COLON     reduce using rule 6 (declaration_helper)
    $default  reduce using rule 3 (block_helper)

    block_helper        go to state 33
    declaration         go to state 9
    declaration_helper  go to state 10


State 15

    5 declaration: declaration_helper COLON . declaration_helper2

    INTEGER  shift, and go to state 34
    ARRAY    shift, and go to state 35

    declaration_helper2  go to state 36


State 16

    8 declaration_helper: IDENT COMMA declaration_helper .

    $default  reduce using rule 8 (declaration_helper)


State 17

   63 var: IDENT .
   64    | IDENT . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 37

    $default  reduce using rule 63 (var)


State 18

   26 continue_statement: CONTINUE .

    $default  reduce using rule 26 (continue_statement)


State 19

   22 readwrite_statement: READ . var readwrite_helper

    IDENT  shift, and go to state 17

    var  go to state 38


State 20

   23 readwrite_statement: WRITE . var readwrite_helper

    IDENT  shift, and go to state 17

    var  go to state 39


State 21

   18 ifelse_statement: IF . bool_exp THEN statement_helper ENDIF
   19                 | IF . bool_exp THEN statement_helper ELSE statement_helper ENDIF

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 46
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 22

   21 dobegin_statement: DO . BEGINLOOP statement_helper ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 53


State 23

   20 while_statement: WHILE . bool_exp BEGINLOOP statement_helper ENDLOOP

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 54
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 24

   28 statement_helper: statement . SEMICOLON statement_helper

    SEMICOLON  shift, and go to state 55


State 25

   11 statement: expression_statement .

    $default  reduce using rule 11 (statement)


State 26

   12 statement: ifelse_statement .

    $default  reduce using rule 12 (statement)


State 27

   13 statement: while_statement .

    $default  reduce using rule 13 (statement)


State 28

   14 statement: dobegin_statement .

    $default  reduce using rule 14 (statement)


State 29

   15 statement: readwrite_statement .

    $default  reduce using rule 15 (statement)


State 30

   16 statement: continue_statement .

    $default  reduce using rule 16 (statement)


State 31

    2 block: block_helper BEGIN_PROGRAM statement_helper .

    $default  reduce using rule 2 (block)


State 32

   17 expression_statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 56


State 33

    4 block_helper: declaration SEMICOLON block_helper .

    $default  reduce using rule 4 (block_helper)


State 34

   10 declaration_helper2: INTEGER .

    $default  reduce using rule 10 (declaration_helper2)


State 35

    9 declaration_helper2: ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 57


State 36

    5 declaration: declaration_helper COLON declaration_helper2 .

    $default  reduce using rule 5 (declaration)


State 37

   64 var: IDENT L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    expression  go to state 59
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 38

   22 readwrite_statement: READ var . readwrite_helper

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (readwrite_helper)

    readwrite_helper  go to state 61


State 39

   23 readwrite_statement: WRITE var . readwrite_helper

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (readwrite_helper)

    readwrite_helper  go to state 62


State 40

   59 term: NUMBER .

    $default  reduce using rule 59 (term)


State 41

   41 relation_exp: L_PAREN . bool_exp R_PAREN
   61 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 63
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 64
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 42

   60 term: MINUS . NUMBER
   62     | MINUS . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 65
    L_PAREN  shift, and go to state 66


State 43

   38 relation_exp: NOT . expression comp expression
   39             | NOT . TRUE
   40             | NOT . FALSE
   42             | NOT . L_PAREN bool_exp R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 67
    MINUS    shift, and go to state 42
    FALSE    shift, and go to state 68
    TRUE     shift, and go to state 69

    expression  go to state 70
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 44

   36 relation_exp: FALSE .

    $default  reduce using rule 36 (relation_exp)


State 45

   35 relation_exp: TRUE .

    $default  reduce using rule 35 (relation_exp)


State 46

   18 ifelse_statement: IF bool_exp . THEN statement_helper ENDIF
   19                 | IF bool_exp . THEN statement_helper ELSE statement_helper ENDIF

    THEN  shift, and go to state 71


State 47

   29 bool_exp: relation_and_exp . bool_exp_helper

    OR  shift, and go to state 72

    $default  reduce using rule 33 (bool_exp_helper)

    bool_exp_helper  go to state 73


State 48

   30 relation_and_exp: relation_exp . relation_and_helper

    AND  shift, and go to state 74

    $default  reduce using rule 31 (relation_and_helper)

    relation_and_helper  go to state 75


State 49

   37 relation_exp: expression . comp expression

    LT   shift, and go to state 76
    LTE  shift, and go to state 77
    GT   shift, and go to state 78
    GTE  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81

    comp  go to state 82


State 50

   49 expression: mult_exp . expression_helper

    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84

    $default  reduce using rule 50 (expression_helper)

    expression_helper  go to state 85


State 51

   53 mult_exp: term . mult_exp_helper

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 54 (mult_exp_helper)

    mult_exp_helper  go to state 89


State 52

   58 term: var .

    $default  reduce using rule 58 (term)


State 53

   21 dobegin_statement: DO BEGINLOOP . statement_helper ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 27 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 90
    var                   go to state 32


State 54

   20 while_statement: WHILE bool_exp . BEGINLOOP statement_helper ENDLOOP

    BEGINLOOP  shift, and go to state 91


State 55

   28 statement_helper: statement SEMICOLON . statement_helper

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 27 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 92
    var                   go to state 32


State 56

   17 expression_statement: var ASSIGN . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    expression  go to state 93
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 57

    9 declaration_helper2: ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 94


State 58

   61 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    expression  go to state 95
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 59

   64 var: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 96


State 60

   25 readwrite_helper: COMMA . var readwrite_helper

    IDENT  shift, and go to state 17

    var  go to state 97


State 61

   22 readwrite_statement: READ var readwrite_helper .

    $default  reduce using rule 22 (readwrite_statement)


State 62

   23 readwrite_statement: WRITE var readwrite_helper .

    $default  reduce using rule 23 (readwrite_statement)


State 63

   41 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 98


State 64

   37 relation_exp: expression . comp expression
   61 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99
    LT       shift, and go to state 76
    LTE      shift, and go to state 77
    GT       shift, and go to state 78
    GTE      shift, and go to state 79
    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81

    comp  go to state 82


State 65

   60 term: MINUS NUMBER .

    $default  reduce using rule 60 (term)


State 66

   62 term: MINUS L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    expression  go to state 100
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 67

   42 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   61 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 101
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 64
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 68

   40 relation_exp: NOT FALSE .

    $default  reduce using rule 40 (relation_exp)


State 69

   39 relation_exp: NOT TRUE .

    $default  reduce using rule 39 (relation_exp)


State 70

   38 relation_exp: NOT expression . comp expression

    LT   shift, and go to state 76
    LTE  shift, and go to state 77
    GT   shift, and go to state 78
    GTE  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81

    comp  go to state 102


State 71

   18 ifelse_statement: IF bool_exp THEN . statement_helper ENDIF
   19                 | IF bool_exp THEN . statement_helper ELSE statement_helper ENDIF

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 27 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 103
    var                   go to state 32


State 72

   34 bool_exp_helper: OR . relation_and_exp bool_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    relation_and_exp  go to state 104
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 73

   29 bool_exp: relation_and_exp bool_exp_helper .

    $default  reduce using rule 29 (bool_exp)


State 74

   32 relation_and_helper: AND . relation_exp relation_and_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    relation_exp  go to state 105
    expression    go to state 49
    mult_exp      go to state 50
    term          go to state 51
    var           go to state 52


State 75

   30 relation_and_exp: relation_exp relation_and_helper .

    $default  reduce using rule 30 (relation_and_exp)


State 76

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 77

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 78

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 79

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


State 80

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 81

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 82

   37 relation_exp: expression comp . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    expression  go to state 106
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 83

   52 expression_helper: MINUS . mult_exp expression_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    mult_exp  go to state 107
    term      go to state 51
    var       go to state 52


State 84

   51 expression_helper: PLUS . mult_exp expression_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    mult_exp  go to state 108
    term      go to state 51
    var       go to state 52


State 85

   49 expression: mult_exp expression_helper .

    $default  reduce using rule 49 (expression)


State 86

   55 mult_exp_helper: MULT . term mult_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    term  go to state 109
    var   go to state 52


State 87

   56 mult_exp_helper: DIV . term mult_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    term  go to state 110
    var   go to state 52


State 88

   57 mult_exp_helper: MOD . term mult_exp_helper

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    term  go to state 111
    var   go to state 52


State 89

   53 mult_exp: term mult_exp_helper .

    $default  reduce using rule 53 (mult_exp)


State 90

   21 dobegin_statement: DO BEGINLOOP statement_helper . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 112


State 91

   20 while_statement: WHILE bool_exp BEGINLOOP . statement_helper ENDLOOP

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 27 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 113
    var                   go to state 32


State 92

   28 statement_helper: statement SEMICOLON statement_helper .

    $default  reduce using rule 28 (statement_helper)


State 93

   17 expression_statement: var ASSIGN expression .

    $default  reduce using rule 17 (expression_statement)


State 94

    9 declaration_helper2: ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 114


State 95

   61 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99


State 96

   64 var: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 64 (var)


State 97

   25 readwrite_helper: COMMA var . readwrite_helper

    COMMA  shift, and go to state 60

    $default  reduce using rule 24 (readwrite_helper)

    readwrite_helper  go to state 115


State 98

   41 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 41 (relation_exp)


State 99

   61 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (term)


State 100

   62 term: MINUS L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 116


State 101

   42 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 117


State 102

   38 relation_exp: NOT expression comp . expression

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 58
    MINUS    shift, and go to state 42

    expression  go to state 118
    mult_exp    go to state 50
    term        go to state 51
    var         go to state 52


State 103

   18 ifelse_statement: IF bool_exp THEN statement_helper . ENDIF
   19                 | IF bool_exp THEN statement_helper . ELSE statement_helper ENDIF

    ENDIF  shift, and go to state 119
    ELSE   shift, and go to state 120


State 104

   34 bool_exp_helper: OR relation_and_exp . bool_exp_helper

    OR  shift, and go to state 72

    $default  reduce using rule 33 (bool_exp_helper)

    bool_exp_helper  go to state 121


State 105

   32 relation_and_helper: AND relation_exp . relation_and_helper

    AND  shift, and go to state 74

    $default  reduce using rule 31 (relation_and_helper)

    relation_and_helper  go to state 122


State 106

   37 relation_exp: expression comp expression .

    $default  reduce using rule 37 (relation_exp)


State 107

   52 expression_helper: MINUS mult_exp . expression_helper

    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84

    $default  reduce using rule 50 (expression_helper)

    expression_helper  go to state 123


State 108

   51 expression_helper: PLUS mult_exp . expression_helper

    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84

    $default  reduce using rule 50 (expression_helper)

    expression_helper  go to state 124


State 109

   55 mult_exp_helper: MULT term . mult_exp_helper

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 54 (mult_exp_helper)

    mult_exp_helper  go to state 125


State 110

   56 mult_exp_helper: DIV term . mult_exp_helper

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 54 (mult_exp_helper)

    mult_exp_helper  go to state 126


State 111

   57 mult_exp_helper: MOD term . mult_exp_helper

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 54 (mult_exp_helper)

    mult_exp_helper  go to state 127


State 112

   21 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 128


State 113

   20 while_statement: WHILE bool_exp BEGINLOOP statement_helper . ENDLOOP

    ENDLOOP  shift, and go to state 129


State 114

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 130


State 115

   25 readwrite_helper: COMMA var readwrite_helper .

    $default  reduce using rule 25 (readwrite_helper)


State 116

   62 term: MINUS L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 117

   42 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 42 (relation_exp)


State 118

   38 relation_exp: NOT expression comp expression .

    $default  reduce using rule 38 (relation_exp)


State 119

   18 ifelse_statement: IF bool_exp THEN statement_helper ENDIF .

    $default  reduce using rule 18 (ifelse_statement)


State 120

   19 ifelse_statement: IF bool_exp THEN statement_helper ELSE . statement_helper ENDIF

    IDENT     shift, and go to state 17
    CONTINUE  shift, and go to state 18
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    DO        shift, and go to state 22
    WHILE     shift, and go to state 23

    $default  reduce using rule 27 (statement_helper)

    statement             go to state 24
    expression_statement  go to state 25
    ifelse_statement      go to state 26
    while_statement       go to state 27
    dobegin_statement     go to state 28
    readwrite_statement   go to state 29
    continue_statement    go to state 30
    statement_helper      go to state 131
    var                   go to state 32


State 121

   34 bool_exp_helper: OR relation_and_exp bool_exp_helper .

    $default  reduce using rule 34 (bool_exp_helper)


State 122

   32 relation_and_helper: AND relation_exp relation_and_helper .

    $default  reduce using rule 32 (relation_and_helper)


State 123

   52 expression_helper: MINUS mult_exp expression_helper .

    $default  reduce using rule 52 (expression_helper)


State 124

   51 expression_helper: PLUS mult_exp expression_helper .

    $default  reduce using rule 51 (expression_helper)


State 125

   55 mult_exp_helper: MULT term mult_exp_helper .

    $default  reduce using rule 55 (mult_exp_helper)


State 126

   56 mult_exp_helper: DIV term mult_exp_helper .

    $default  reduce using rule 56 (mult_exp_helper)


State 127

   57 mult_exp_helper: MOD term mult_exp_helper .

    $default  reduce using rule 57 (mult_exp_helper)


State 128

   21 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE . bool_exp

    NUMBER   shift, and go to state 40
    IDENT    shift, and go to state 17
    L_PAREN  shift, and go to state 41
    MINUS    shift, and go to state 42
    NOT      shift, and go to state 43
    FALSE    shift, and go to state 44
    TRUE     shift, and go to state 45

    bool_exp          go to state 132
    relation_and_exp  go to state 47
    relation_exp      go to state 48
    expression        go to state 49
    mult_exp          go to state 50
    term              go to state 51
    var               go to state 52


State 129

   20 while_statement: WHILE bool_exp BEGINLOOP statement_helper ENDLOOP .

    $default  reduce using rule 20 (while_statement)


State 130

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 133


State 131

   19 ifelse_statement: IF bool_exp THEN statement_helper ELSE statement_helper . ENDIF

    ENDIF  shift, and go to state 134


State 132

   21 dobegin_statement: DO BEGINLOOP statement_helper ENDLOOP WHILE bool_exp .

    $default  reduce using rule 21 (dobegin_statement)


State 133

    9 declaration_helper2: ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 9 (declaration_helper2)


State 134

   19 ifelse_statement: IF bool_exp THEN statement_helper ELSE statement_helper ENDIF .

    $default  reduce using rule 19 (ifelse_statement)
